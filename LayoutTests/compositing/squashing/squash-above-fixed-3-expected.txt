This scenario verifies that the green "container" element and lime "innerScrolling" element scroll properly even though there is a blue fixed-position element layered in between them.

The catch is that the squashing requirements should be computed in correct paint order, so that the green container does not accidentally position itself with respect to the wrong layer and not scroll.

CASE 1, original layer tree:
(GraphicsLayer
  (bounds 785.00 4100.00)
  (children 1
    (GraphicsLayer
      (bounds 785.00 4100.00)
      (contentsOpaque 1)
      (drawsContent 1)
      (children 2
        (GraphicsLayer
          (bounds 400.00 400.00)
          (contentsOpaque 1)
          (drawsContent 1)
          (backgroundColor #808080)
        )
        (GraphicsLayer
          (position 100.00 100.00)
          (bounds 100.00 4000.00)
          (contentsOpaque 1)
          (drawsContent 1)
          (backgroundColor #008000)
          (children 2
            (GraphicsLayer
              (position 0.00 50.00)
              (bounds 200.00 100.00)
              (contentsOpaque 1)
              (drawsContent 1)
              (backgroundColor #0000FF)
            )
            (GraphicsLayer
              (position 100.00 0.00)
              (bounds 100.00 100.00)
              (contentsOpaque 1)
              (drawsContent 1)
              (backgroundColor #00FF00)
            )
          )
        )
      )
    )
  )
)
CASE 2, scrolling y by 10 pixels, both the "container" and "inner" should scroll properly.
(GraphicsLayer
  (bounds 785.00 4100.00)
  (children 1
    (GraphicsLayer
      (bounds 785.00 4100.00)
      (contentsOpaque 1)
      (drawsContent 1)
      (children 2
        (GraphicsLayer
          (position 0.00 10.00)
          (bounds 400.00 400.00)
          (contentsOpaque 1)
          (drawsContent 1)
          (backgroundColor #808080)
        )
        (GraphicsLayer
          (position 100.00 100.00)
          (bounds 100.00 4000.00)
          (contentsOpaque 1)
          (drawsContent 1)
          (backgroundColor #008000)
          (children 2
            (GraphicsLayer
              (position 0.00 60.00)
              (bounds 200.00 100.00)
              (contentsOpaque 1)
              (drawsContent 1)
              (backgroundColor #0000FF)
            )
            (GraphicsLayer
              (position 100.00 0.00)
              (bounds 100.00 100.00)
              (contentsOpaque 1)
              (drawsContent 1)
              (backgroundColor #00FF00)
            )
          )
        )
      )
    )
  )
)
CASE 3, scrolling y further so that "inner" no longer overlaps the fixed-pos layer, then the stacking context of "container" includes the "innerScrolling" layer, and doubles in width:
(GraphicsLayer
  (bounds 785.00 4100.00)
  (children 1
    (GraphicsLayer
      (bounds 785.00 4100.00)
      (contentsOpaque 1)
      (drawsContent 1)
      (children 2
        (GraphicsLayer
          (position 0.00 110.00)
          (bounds 400.00 400.00)
          (contentsOpaque 1)
          (drawsContent 1)
          (backgroundColor #808080)
        )
        (GraphicsLayer
          (position 100.00 100.00)
          (bounds 200.00 4000.00)
          (drawsContent 1)
          (backgroundColor #008000)
          (repaint rects
          )
          (children 1
            (GraphicsLayer
              (position 0.00 160.00)
              (bounds 200.00 100.00)
              (contentsOpaque 1)
              (drawsContent 1)
              (backgroundColor #0000FF)
            )
          )
        )
      )
    )
  )
)

