{% from "macros.tmpl" import license -%}
{{ license() }}

#ifndef InternalSettingsGenerated_h
#define InternalSettingsGenerated_h

#include "heap/Handle.h"
#include "platform/RefCountedSupplement.h"
#include "wtf/PassRefPtr.h"
#include "wtf/RefCounted.h"
#include "wtf/text/WTFString.h"

namespace WebCore {

class Page;

class InternalSettingsGenerated : public RefCountedWillBeGarbageCollectedFinalized<InternalSettingsGenerated> {
public:
    explicit InternalSettingsGenerated(Page*);
    virtual ~InternalSettingsGenerated();
    void resetToConsistentState();
{%- for setting in settings if setting.type|to_idl_type %}
    void set{{setting.name|upper_first}}({{setting.type|to_passing_type}} {{setting.name}});
{%- endfor %}

    virtual void trace(Visitor*) { }

private:
    Page* m_page;

    {%- for setting in settings if setting.type|to_idl_type %}
    {{setting.type}} m_{{setting.name}};
    {%- endfor %}
};

} // namespace WebCore

#endif // InternalSettingsGenerated_h
